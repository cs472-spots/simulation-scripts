#!/usr/bin/env python
import sys

def write(s):
    sys.stdout.write(s)

def writeSpot(spot, indent):
    spotString = '{indent}"{label}" : false,\n'.format(indent=indent*2, label='authorized')
    spotString += '{indent}"{label}" : "",\n'.format(indent=indent*2, label='occupant')
    spotString += '{indent}"{label}" : "staff",\n'.format(indent=indent*2, label='type')
    spotString += '{indent}"{label}" : "false",\n'.format(indent=indent*2, label='vacancy')
    spotString += '{indent}"{label}" : {lat},\n'.format(indent=indent*2, label='lat', lat=spot[0])
    spotString += '{indent}"{label}" : {lng}\n'.format(indent=indent*2, label='lng', lng=spot[1])
    return spotString

def writeLot(spots):
    lotString = "{\n"
    spotsLen = len(spots)

    for spotNumber, spot in zip(range(spotsLen), spots):
        lotString += '  "{:0>4}" : {{\n'.format(spotNumber)
        lotString += writeSpot(spot, '  ')
        lotString += '  }}{}\n'.format("," if spotNumber < spotsLen-1 else "")

    lotString += "}\n"
    return lotString

spots = [
        (36.111294, -115.141922),
        (36.111292, -115.141887),
        (36.111292, -115.141861),
        (36.111296, -115.141833),
        (36.111297, -115.141800),
        (36.111296, -115.141769),
        (36.111298, -115.141741),
        (36.111298, -115.141711),
        (36.111300, -115.141678),
        (36.111306, -115.141579),
        (36.111307, -115.141535),
        (36.111307, -115.141505),
        (36.111307, -115.141449),
        (36.111321, -115.141342),
        (36.111322, -115.141285),
        (36.111323, -115.141254),
        (36.111329, -115.141207),
        (36.111328, -115.141181),
        (36.111328, -115.141130),
        (36.111330, -115.141104),
        (36.111331, -115.141073),
        (36.111333, -115.141044),
        (36.111334, -115.141014),
        (36.111333, -115.140986),
        (36.111338, -115.140954),

        (36.111434, -115.141881),
        (36.111434, -115.141850),
        (36.111434, -115.141820),
        (36.111434, -115.141790),
        (36.111435, -115.141759),
        (36.111434, -115.141728),
        (36.111434, -115.141699),
        (36.111434, -115.141665),
        (36.111434, -115.141586),
        (36.111437, -115.141554),
        (36.111435, -115.141522),
        (36.111435, -115.141492),
        (36.111438, -115.141461),
        (36.111438, -115.141430),
        (36.111438, -115.141399),
        (36.111440, -115.141367),
        (36.111440, -115.141337),
        (36.111441, -115.141306),
        (36.111441, -115.141277),
        (36.111441, -115.141247),
        (36.111442, -115.141217),
        (36.111442, -115.141188),
        (36.111443, -115.141158),
        (36.111443, -115.141128),
        (36.111444, -115.141095),
        (36.111444, -115.141067),
        (36.111442, -115.141036),
        (36.111446, -115.141004),

        (36.111495, -115.141880),
        (36.111493, -115.141849),
        (36.111494, -115.141823),
        (36.111492, -115.141792),
        (36.111493, -115.141762),
        (36.111492, -115.141732),
        (36.111494, -115.141702),
        (36.111495, -115.141671),
        (36.111600, -115.141739),
        (36.111600, -115.141769),
        (36.111599, -115.141799),
        (36.111598, -115.141829),
        (36.111597, -115.141859),
        (36.111597, -115.141890),

        (36.111493, -115.141590),
        (36.111494, -115.141555),
        (36.111496, -115.141522),
        (36.111496, -115.141497),
        (36.111497, -115.141463),
        (36.111497, -115.141435),
        (36.111497, -115.141404),
        (36.111499, -115.141374),
        (36.111501, -115.141339),
        (36.111500, -115.141311),
        (36.111498, -115.141251),
        (36.111499, -115.141221),
        (36.111500, -115.141192),
        (36.111501, -115.141162),
        (36.111502, -115.141131),
        (36.111502, -115.141101),
        (36.111503, -115.141070),
        (36.111503, -115.141040),
        (36.111505, -115.141006),

        (36.11160379274571, -115.1415338597717),
        (36.11160379274571, -115.14150569657704),
        (36.11160595962332, -115.14147485117337),
        (36.11160812650088, -115.1414440057697),
        (36.11160812650088, -115.14141316036603),
        (36.11160812650088, -115.14138231496236),
        (36.11160920993966, -115.1413528106632),
        (36.11160920993966, -115.14132330636403),
        (36.11161137681711, -115.14128843764684),
        (36.11161137681711, -115.14126027445218),
        (36.11161029337838, -115.141228087944),
        (36.11161137681711, -115.14119992474934),
        (36.11160920993966, -115.14116773824117),
        (36.11160920993966, -115.141138233942),
        (36.11160812650088, -115.14110738853833),
        (36.11161246025583, -115.14107654313466),
        (36.11161354369453, -115.14104435662648),
        (36.11161029337838, -115.1410121701183),

        (36.111659880519525, -115.14189207490345),
        (36.111659880519525, -115.14186257060429),
        (36.11166096395756, -115.14183306630513),
        (36.11166096395756, -115.14180356200596),
        (36.11166204739558, -115.14177271660229),
        (36.11166096395756, -115.14174187119862),
        (36.11166313083359, -115.14170968469044),
        (36.11166096395756, -115.14168152149578),
        (36.111664214271585, -115.14153802331349),
        (36.111664214271585, -115.14150717790982),
        (36.11166529770958, -115.14147901471516),
        (36.11166529770958, -115.14144682820698),
        (36.11166638114753, -115.14141598280331),
        (36.111667464585494, -115.14138513739964),
        (36.11166529770958, -115.14135429199597),
        (36.11166529770958, -115.1413247876968),
        (36.11166854802343, -115.14129394229313),
        (36.11167071489926, -115.14126309688946),
        (36.111667464585494, -115.1412335925903),
        (36.111667464585494, -115.14120408829113),
        (36.111667464585494, -115.14117190178295),
        (36.111667464585494, -115.1411437385883),
        (36.11166854802343, -115.14111021097561),
        (36.111667464585494, -115.14107936557194),
        (36.111667464585494, -115.14104717906376),
        (36.11166638114753, -115.1410176747646),
        (36.11177472486882, -115.14183708961865),
        (36.11177472486882, -115.14180624421498),
        (36.11177255799588, -115.1417753988113),
        (36.11177472486882, -115.14174455340763),
        (36.11177472486882, -115.14171639021298),
        (36.11177147455936, -115.1416842037048),
        (36.11177039112286, -115.14162251289746),
        (36.11177147455936, -115.14159300859829),
        (36.11177147455936, -115.14156082209011),
        (36.111769307686316, -115.14152997668644),
        (36.111767140813214, -115.1415031545963),
        (36.111767140813214, -115.14147230919262),
        (36.11176822424977, -115.14144012268444),
        (36.11176822424977, -115.14141061838528),
        (36.111767140813214, -115.1413784318771),
        (36.111767140813214, -115.14135295089146),
        (36.111767140813214, -115.14131942327877),
        (36.11176605737663, -115.1412885778751),
        (36.111767140813214, -115.14125907357594),
        (36.11176605737663, -115.14122688706776),
        (36.111767140813214, -115.14119604166409)
        ]

filename = sys.argv[1]

spotsFile = open(filename, 'w')

print writeLot(spots)
spotsFile.write(writeLot(spots))
